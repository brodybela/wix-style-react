webpackJsonp([255],{1857:function(module,exports){module.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueId from 'lodash/uniqueId';\nimport styles from '../RadioGroup.scss';\nimport classNames from 'classnames';\nimport WixComponent from '../../BaseComponents/WixComponent';\nimport typography, {convertFromUxLangToCss} from '../../Typography';\n\nclass RadioButton extends WixComponent {\n  constructor(props) {\n    super(props);\n    this.id = uniqueId();\n  }\n\n  render() {\n    const {value, vAlign, checked, disabled, name, type, onChange, style, lineHeight} = this.props;\n\n    const radioClasses = classNames({\n      [styles.radio]: true,\n      [styles.checked]: checked,\n      [styles.disabled]: disabled\n    });\n\n    const labelClasses = classNames({\n      [styles.vcenter]: vAlign === 'center',\n      [styles.vtop]: vAlign === 'top',\n      [typography[convertFromUxLangToCss('T1.1')]]: true\n    });\n\n    const buttonClasses = classNames({\n      [styles.checked]: checked,\n      [styles.radioButton]: true\n    });\n\n    const {icon, children} = this.props;\n    return (\n        type === 'button' ? (\n          <button\n            className={buttonClasses}\n            checked={checked}\n            disabled={disabled}\n            id={this.id}\n            onClick={() => (!checked && !disabled) ? onChange(value) : null}\n            >\n            {icon ? <span>{icon}</span> : null}\n            {children ? <span>{children}</span> : null}\n          </button>\n        ) : (\n          <div className={styles.radioWrapper} style={style}>\n            <input\n              type=\"radio\"\n              name={name}\n              value={value}\n              id={this.id}\n              checked={checked}\n              disabled={disabled}\n              onChange={() => (!checked && !disabled) ? onChange(value) : null}\n              />\n            <label style={{lineHeight}} htmlFor={this.id} className={labelClasses} data-hook=\"radio-label\">\n              <div style={{height: lineHeight}} className={styles.radioButtonWrapper}>\n                <div className={radioClasses}/>\n              </div>\n              <div className={styles.children}>\n                {this.props.children}\n              </div>\n            </label>\n          </div>\n      )\n    );\n  }\n}\n\nRadioButton.defaultProps = {\n  vAlign: 'center'\n};\n\nRadioButton.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  vAlign: PropTypes.oneOf(['center', 'top']),\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.any,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  lineHeight: PropTypes.string\n};\n\nRadioButton.displayName = 'RadioGroup.Button';\n\nexport default RadioButton;\n"}});