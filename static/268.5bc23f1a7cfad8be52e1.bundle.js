webpackJsonp([268],{1844:function(module,exports){module.exports='import s from \'./PageHeader.scss\';\nimport React from \'react\';\nimport PropTypes from \'prop-types\';\nimport WixComponent from \'../../BaseComponents/WixComponent\';\nimport classNames from \'classnames\';\nimport Breadcrumbs from \'../../Breadcrumbs/Breadcrumbs\';\nimport Text from \'../../Text/Text\';\nimport {Animator} from \'wix-animations\';\nimport {ArrowLeft} from \'../../Icons\';\nimport Button from \'../../Button\';\n\nconst animateComponent = (show, useEnterDelay, content) => {\n  return useEnterDelay ?\n    <Animator show={show} opacity timing="medium" delay={{enter: 100}}>\n      {content}\n    </Animator> :\n    <Animator show={show} opacity timing="medium">\n      {content}\n    </Animator>;\n};\n\nexport const generateDefaultBreadcrumbs = title =>\n  <Breadcrumbs\n    items={[{id: \'1\', value: title}]}\n    activeId="1"\n    size="medium"\n    theme="onGrayBackground"\n    onClick={() => {}}\n    />;\n\n/**\n  * A header that sticks at the top of the container which minimizes on scroll\n  */\nexport class PageHeader extends WixComponent {\n  render() {\n    const {breadcrumbs, onBackClicked, title, subtitle, minimized, actionsBar, showBackButton} = this.props;\n\n    return (\n      <div className={s.headerContainer}>\n        <div className={s.header}>\n          <div>\n            {\n              animateComponent(!!breadcrumbs || minimized, !breadcrumbs,\n                <div className={classNames(s.breadcrumbsContainer, {[s.absolute]: !breadcrumbs, [s.minimized]: minimized})} data-hook="page-header-breadcrumbs">\n                  {breadcrumbs || generateDefaultBreadcrumbs(title)}\n                </div>)\n            }\n          </div>\n          {\n            showBackButton && onBackClicked && animateComponent(!minimized, !breadcrumbs,\n              <div className={classNames(s.backButton, {[s.minimized]: minimized})} data-hook="page-header-backbutton">\n                <Button onClick={onBackClicked} theme="icon-white">\n                  <ArrowLeft size="12px"/>\n                </Button>\n              </div>)\n          }\n          <div className={s.titleContainer}>\n            {\n              animateComponent(!minimized, !breadcrumbs,\n                <div className={classNames(s.title, {[s.minimized]: minimized})} data-hook="page-header-title">\n                  <Text appearance="H1">{title}</Text>\n                </div>)\n            }\n            {\n              subtitle && animateComponent(!minimized, !breadcrumbs,\n                <div className={classNames({[s.minimized]: minimized})} data-hook="page-header-subtitle">\n                  <Text appearance="T1.1">{subtitle}</Text>\n                </div>)\n            }\n          </div>\n        </div>\n        {\n          actionsBar &&\n            <div className={classNames(s.actionsBar, {[s.minimized]: minimized, [s.withBreadcrumbs]: !!breadcrumbs})} data-hook="page-header-actionbar">\n              {React.cloneElement(actionsBar, {minimized})}\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nPageHeader.displayName = \'PageHeader\';\n\nPageHeader.propTypes = {\n  /** The state from the header container */\n  minimized: PropTypes.bool,\n  /** Breadcrumbs object to display */\n  breadcrumbs: PropTypes.element,\n  /** Title to display */\n  title: PropTypes.string.isRequired,\n  /** Subtitle to display */\n  subtitle: PropTypes.string,\n  /** Callback when back button clicked */\n  onBackClicked: PropTypes.func,\n  /** Should display back button */\n  showBackButton: PropTypes.bool,\n  /** Components that includes actions */\n  actionBar: PropTypes.element\n};\n\nPageHeader.defaultProps = {\n  minimized: false\n};\n\nexport default PageHeader;\n'}});