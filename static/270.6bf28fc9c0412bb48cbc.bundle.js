webpackJsonp([270],{1842:function(module,exports){module.exports="import React from 'react';\nimport Page from './Page';\nimport pageDriverFactory from './Page.driver';\nimport {createDriverFactory} from '../test-common';\n\nconst Header = () => (\n  <div>header</div>\n);\n\nconst Content = () => (\n  <div>content</div>\n);\n\nconst PageRequiredChildrenError = 'Warning: Failed prop type: The prop `children` is marked as required in `Page`, but its value is `undefined`.\\n    in Page';\nconst PageRequiredChildrenArrayError = 'Warning: Failed prop type: Invalid prop `children` of type `object` supplied to `Page`, expected an array.\\n    in Page';\nconst PageFirstChildHeaderError = 'Warning: Failed prop type: Page: Invalid Prop children, first child must be Page.Header\\n    in Page';\nconst PageSecondChildContentError = 'Warning: Failed prop type: Page: Invalid Prop children, second child must be Page.Content\\n    in Page';\nconst PageFirstAndSecondChildError = 'Warning: Failed prop type: Page: Invalid Prop children, first child must be Page.Header, and second child must be Page.Content\\n    in Page';\nconst PageHeaderChildrenError = 'Warning: Failed prop type: The prop `children` is marked as required in `Page.Header`, but its value is `undefined`.\\n    in Page.Header';\nconst PageContentChildrenError = 'Warning: Failed prop type: The prop `children` is marked as required in `Page.Content`, but its value is `undefined`.\\n    in Page.Content';\n\ndescribe('Page', () => {\n  const createDriver = createDriverFactory(pageDriverFactory);\n  const page = (\n    <Page>\n      <Page.Header>\n        <Header/>\n      </Page.Header>\n      <Page.Content>\n        <Content/>\n      </Page.Content>\n    </Page>\n  );\n\n  it('should initialize component', () => {\n    const driver = createDriver(page);\n    expect(driver.exists()).toBeTruthy();\n  });\n\n  describe('Bad Formats', () => {\n    const Header = () => (\n      <div>header</div>\n    );\n\n    let React;\n    const stub = console.error = jest.fn();\n    const createDriver = createDriverFactory(pageDriverFactory);\n\n    beforeEach(() => {\n      React = require('react');\n    });\n\n    afterEach(() => {\n      jest.resetModules();\n      stub.mockReset();\n    });\n\n    it('should not initialize component without children', () => {\n      const page = (\n        <Page/>\n      );\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageRequiredChildrenError);\n    });\n\n    it('should not initialize component with 1 bad child', () => {\n      const page = (\n        <Page>\n          <div/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageRequiredChildrenArrayError);\n    });\n\n    it('should not initialize component with 2 bad children', () => {\n      const page = (\n        <Page>\n          <div/>\n          <div/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageFirstChildHeaderError);\n    });\n\n    it('should not initialize component with 3 bad children', () => {\n      const page = (\n        <Page>\n          <div/>\n          <div/>\n          <div/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageFirstAndSecondChildError);\n    });\n\n    it('should not initialize component with only Header', () => {\n      const page = (\n        <Page>\n          <Page.Header/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageRequiredChildrenArrayError);\n      expect(stub).toHaveBeenCalledWith(PageHeaderChildrenError);\n    });\n\n    it('should not initialize component with only Content', () => {\n      const page = (\n        <Page>\n          <Page.Content/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageRequiredChildrenArrayError);\n      expect(stub).toHaveBeenCalledWith(PageContentChildrenError);\n    });\n\n    it('should not initialize component with empty Header and bad Content ', () => {\n      const page = (\n        <Page>\n          <Page.Header/>\n          <div/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageHeaderChildrenError);\n      expect(stub).toHaveBeenCalledWith(PageSecondChildContentError);\n    });\n\n    it('should not initialize component with empty Content and bad Header', () => {\n      const page = (\n        <Page>\n          <div/>\n          <Page.Content/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageFirstChildHeaderError);\n      expect(stub).toHaveBeenCalledWith(PageContentChildrenError);\n    });\n\n    it('should not initialize component with valid Header but Content has no children', () => {\n      const page = (\n        <Page>\n          <Page.Header>\n            <Header/>\n          </Page.Header>\n          <Page.Content/>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageContentChildrenError);\n    });\n\n    it('should not initialize component with valid Content but Header has no children', () => {\n      const page = (\n        <Page>\n          <Page.Header/>\n          <Page.Content>\n            <Content/>\n          </Page.Content>\n        </Page>\n      );\n\n      createDriver(page);\n      expect(stub).toHaveBeenCalledWith(PageHeaderChildrenError);\n    });\n  });\n});\n\n\n"}});