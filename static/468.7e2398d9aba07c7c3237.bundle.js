webpackJsonp([468],{1644:function(module,exports){module.exports="import React from 'react';\nimport Highlighter from './Highlighter';\nimport {createDriverFactory} from '../test-common';\nimport highlighterDriverFactory from './Highlighter.driver';\nimport {isTestkitExists, isEnzymeTestkitExists} from '../../testkit/test-common';\nimport {highlighterTestkitFactory} from '../../testkit/index';\nimport {highlighterTestkitFactory as enzymeHighlighterTestkitFactory} from '../../testkit/enzyme';\n\ndescribe('Highlighter', () => {\n  const createDriver = createDriverFactory(highlighterDriverFactory);\n\n  it('should show highlighted text', () => {\n    const expectedResult = '<span><strong>Opt</strong><span>ion 1</span></span>';\n\n    const wrapper = createDriver(\n      <Highlighter match=\"Opt\">\n        Option 1\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  it('should show highlighted text on first children level', () => {\n    const expectedResult = `<div><span><strong>Opt</strong><span>ion 1</span></span></div>`;\n\n    const wrapper = createDriver(\n      <Highlighter match=\"Opt\">\n        <div>Option 1</div>\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  it('should show highlighted text on second children level', () => {\n    const expectedResult = `<span><span><span><strong>Opt</strong><span>ion</span></span></span></span>`;\n\n    const wrapper = createDriver(\n      <Highlighter match=\"Opt\">\n        <span>\n          <span>Option</span>\n        </span>\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  it('should show highlighted text on array of children', () => {\n    const expectedResult = `<div><span><span><strong>Opt</strong><span>ion 1</span></span></span></div><div><span><span><strong>Opt</strong><span>ion 2</span></span></span></div>`;\n\n    const wrapper = createDriver(\n      <Highlighter match=\"Opt\">\n        <div>\n          <span>Option 1</span>\n        </div>\n        <div>\n          <span>Option 2</span>\n        </div>\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  it('should show highlighted text on array of different children type', () => {\n    const expectedResult = `<span><strong>Opt</strong><span>ion 2</span></span><div><span><span><strong>Opt</strong><span>ion 1</span></span></span></div>`;\n\n    const wrapper = createDriver(\n      <Highlighter match=\"Opt\">\n        Option 2\n        <div>\n          <span>Option 1</span>\n        </div>\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  it('should show highlighted text on multiple match occurrences', () => {\n    const expectedResult = `<aside><span><span>O</span><strong>p</strong><span>tion</span><strong>p</strong></span></aside>`;\n\n    const wrapper = createDriver(\n      <Highlighter match=\"p\">\n        <aside>Optionp</aside>\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  it('should not be caseSensitive by default', () => {\n    const expectedResult = `<aside><span><span>O</span><strong>p</strong><span>tion</span><strong>P</strong></span></aside>`;\n\n    const wrapper = createDriver(\n      <Highlighter match=\"p\">\n        <aside>OptionP</aside>\n      </Highlighter>\n    );\n\n    expect(wrapper.html()).toEqual(expectedResult);\n  });\n\n  describe('testkit', () => {\n    it('should exist', () => {\n      expect(isTestkitExists(<Highlighter/>, highlighterTestkitFactory)).toBe(true);\n    });\n  });\n\n  describe('enzyme testkit', () => {\n    it('should exist', () => {\n      expect(isEnzymeTestkitExists(<Highlighter/>, enzymeHighlighterTestkitFactory)).toBe(true);\n    });\n  });\n\n});\n"}});