webpackJsonp([472],{1640:function(module,exports){module.exports="import React from 'react';\nimport WixComponent from '../BaseComponents/WixComponent';\nimport PropTypes from 'prop-types';\nimport escapeRegExp from 'lodash/escapeRegExp';\n\nclass HighlightedItem extends WixComponent {\n\n  static propTypes = {\n    match: PropTypes.string,\n    caseSensitive: PropTypes.bool\n  };\n\n  renderElement() {\n    const {children, match} = this.props;\n\n    if (match) {\n      const matchRegExp = this.getMatchRegExp();\n\n      return this.highlightChildren(children, matchRegExp);\n    }\n\n    return children;\n  }\n\n  getMatchRegExp() {\n    const {match, caseSensitive} = this.props;\n    return new RegExp(escapeRegExp(match), caseSensitive ? '' : 'i');\n  }\n\n  getMatchBoundaries(subject, matchRegExp) {\n    const matches = matchRegExp.exec(subject);\n\n    if (matches) {\n      return {\n        first: matches.index,\n        last: matches.index + matches[0].length\n      };\n    }\n  }\n\n  getMatchReactKey(index) {\n    return `match-index-${index}`;\n  }\n\n  highlightChildren(children, matchRegExp) {\n    const processedChildren = [];\n    let matchIndex = 0;\n\n    while (children) {\n      if (!matchRegExp.test(children)) {\n        processedChildren.push(this.renderPlain(children, this.getMatchReactKey(matchIndex++)));\n        return processedChildren;\n      }\n\n      const boundaries = this.getMatchBoundaries(children, matchRegExp);\n      const nonMatch = children.slice(0, boundaries.first);\n\n      if (nonMatch) {\n        processedChildren.push(this.renderPlain(nonMatch, this.getMatchReactKey(matchIndex++)));\n      }\n\n      const match = children.slice(boundaries.first, boundaries.last);\n\n      if (match) {\n        processedChildren.push(this.renderHighlight(match, this.getMatchReactKey(matchIndex++)));\n      }\n\n      children = children.slice(boundaries.last);\n    }\n\n    return processedChildren;\n  }\n\n  renderPlain(plainString, key) {\n    return <span key={key}>{plainString}</span>;\n  }\n\n  renderHighlight(matchString, key) {\n    return React.createElement('strong', {key}, matchString);\n  }\n\n  render() {\n    return (\n      <span>\n        { this.renderElement() }\n      </span>\n    );\n  }\n}\n\nexport default HighlightedItem;\n"}});